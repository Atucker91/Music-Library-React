[{"/Users/alextucker/Desktop/Music-Library-React/src/index.js":"1","/Users/alextucker/Desktop/Music-Library-React/src/App.js":"2","/Users/alextucker/Desktop/Music-Library-React/src/components/AllSongsTable/AllSongsTable.jsx":"3","/Users/alextucker/Desktop/Music-Library-React/src/components/CreatNewSongForm/CreateNewSongForm.jsx":"4","/Users/alextucker/Desktop/Music-Library-React/src/components/TableSearchBar/TableSearchBar.jsx":"5"},{"size":205,"mtime":1633704347690,"results":"6","hashOfConfig":"7"},{"size":4350,"mtime":1633980731545,"results":"8","hashOfConfig":"7"},{"size":1341,"mtime":1633980402141,"results":"9","hashOfConfig":"7"},{"size":1438,"mtime":1633981702710,"results":"10","hashOfConfig":"7"},{"size":285,"mtime":1633977606099,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1ugkvwv",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alextucker/Desktop/Music-Library-React/src/index.js",[],["24","25"],"/Users/alextucker/Desktop/Music-Library-React/src/App.js",["26","27","28","29"],"import axios from 'axios';\nimport React, {Component} from 'react';\nimport AllSongsTable from './components/AllSongsTable/AllSongsTable';\nimport CreateNewSongForm from './components/CreatNewSongForm/CreateNewSongForm';\nimport TableSearchBar from './components/TableSearchBar/TableSearchBar';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            songs: []\n         }\n    }\n\n    componentDidMount(){\n        this.getAllSongs()\n    }\n\n    getAllSongs = async () => {\n        let response = await axios.get('http://127.0.0.1:8000/music/');\n        this.setState({\n            songs: response.data\n        });\n    }\n\n    createSong = async (newSong) => {\n        try{\n            console.log('Succes create in API call')\n            let response = await axios.post('http://127.0.0.1:8000/music/', newSong);\n            let tempSong = this.state.songs;\n            tempSong.push(response.data);\n            this.setState({\n                songs: tempSong\n            })\n            console.log(this.state.songs)\n            this.getAllSongs()\n        }\n        catch (ex) {\n            console.log('Error in API call', ex)\n        }\n    }\n\n    deleteSong = async (id) => {\n        try{\n            console.log('Succes in delete API call')\n            let response = await axios.delete(`http://127.0.0.1:8000/music/${id}/`);\n            let tempSong = this.state.songs;\n            console.log(response.data)\n            tempSong.splice(id, 1);\n            this.setState({\n                songs: tempSong\n            })\n            this.getAllSongs()\n        }\n        catch (ex) {\n            console.log('Error in delete API call', ex)\n        }\n    }\n\n    searchBar (){\n        let input, \n        filter, \n        table, \n        tr;\n        \n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"myTable\");\n        tr = table.getElementsByTagName(\"tr\");\n\n        console.log(table);\n        \n        for (let i = 1; i < tr.length; i++) {\n            let tds = tr[i].getElementsByTagName(\"td\");\n            let flag = false;\n            \n            for(let j = 0; j < tds.length; j++){\n                let td = tds[j];\n                if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\n                    flag = true;\n                } \n            }\n            \n            if(flag){\n                tr[i].style.display = \"\";\n            }\n            else {\n                tr[i].style.display = \"none\";\n            }\n        }\n    }\n\n    filterTable (n) {\n        let table, \n        rows, \n        switching, \n        i, \n        x, \n        y, \n        shouldSwitch, \n        dir, switchcount = 0;\n\n        table = document.getElementById(\"filterTable\");\n        switching = true;\n        dir = \"asc\";\n        \n        while (switching) {\n          \n          switching = false;\n          rows = table.rows;\n         \n          for (i = 1; i < (rows.length - 1); i++) {\n            \n            shouldSwitch = false;\n            \n            x = rows[i].getElementsByTagName(\"TD\")[n];\n            y = rows[i + 1].getElementsByTagName(\"TD\")[n];\n            \n            if (dir == \"asc\") {\n              if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n                shouldSwitch = true;\n                break;\n              }\n            } else if (dir == \"desc\") {\n              if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n                shouldSwitch = true;\n                break;\n              }\n            }\n          }\n          if (shouldSwitch) {\n            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);\n            switching = true;\n            switchcount ++;\n          } else {\n            \n            if (switchcount == 0 && dir == \"asc\") {\n              dir = \"desc\";\n              switching = true;\n            }\n          }\n        }\n      }\n\n    render() { \n        return ( \n            <div>\n                <h1>Hello</h1>\n                <TableSearchBar searchBar={this.searchBar} />\n                <AllSongsTable songList={this.state.songs} deleteSong={this.deleteSong} filterTable={this.filterTable} />\n                <CreateNewSongForm createNewSong={this.createSong} />\n            </div>\n         );\n    }\n}\n \nexport default App;","/Users/alextucker/Desktop/Music-Library-React/src/components/AllSongsTable/AllSongsTable.jsx",[],"/Users/alextucker/Desktop/Music-Library-React/src/components/CreatNewSongForm/CreateNewSongForm.jsx",[],"/Users/alextucker/Desktop/Music-Library-React/src/components/TableSearchBar/TableSearchBar.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":119,"column":21,"nodeType":"36","messageId":"37","endLine":119,"endColumn":23},{"ruleId":"34","severity":1,"message":"35","line":124,"column":28,"nodeType":"36","messageId":"37","endLine":124,"endColumn":30},{"ruleId":"34","severity":1,"message":"35","line":137,"column":29,"nodeType":"36","messageId":"37","endLine":137,"endColumn":31},{"ruleId":"34","severity":1,"message":"35","line":137,"column":41,"nodeType":"36","messageId":"37","endLine":137,"endColumn":43},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]