{"ast":null,"code":"var _jsxFileName = \"/Users/alextucker/Desktop/Music-Library-React/src/App.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport AllSongsTable from './components/AllSongsTable/AllSongsTable';\nimport CreateNewSongForm from './components/CreatNewSongForm/CreateNewSongForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllSongs = async () => {\n      let response = await axios.get('http://127.0.0.1:8000/music/');\n      this.setState({\n        songs: response.data\n      });\n    };\n\n    this.createSong = async newSong => {\n      try {\n        console.log('Succes create in API call');\n        let response = await axios.post('http://127.0.0.1:8000/music/', newSong);\n        let tempSong = this.state.songs;\n        tempSong.push(response.data);\n        this.setState({\n          songs: tempSong\n        });\n        console.log(this.state.songs);\n        this.getAllSongs();\n      } catch (ex) {\n        console.log('Error in API call', ex);\n      }\n    };\n\n    this.deleteSong = async id => {\n      try {\n        console.log('Succes in delete API call');\n        let response = await axios.delete(`http://127.0.0.1:8000/music/${id}/`);\n        let tempSong = this.state.songs;\n        console.log(response.data);\n        tempSong.splice(id, 1);\n        this.setState({\n          songs: tempSong\n        });\n        this.getAllSongs();\n      } catch (ex) {\n        console.log('Error in delete API call', ex);\n      }\n    };\n\n    this.state = {\n      songs: []\n    };\n  }\n\n  componentDidMount() {\n    this.getAllSongs();\n  }\n\n  filterList() {\n    let input, filter, table, tr, td, i;\n    input = document.getElementById(\"myInput\");\n    filter = input.value.toUpperCase();\n    table = document.getElementById(\"myTable\");\n    tr = table.getElementsByTagName(\"tr\");\n\n    for (i = 0; i < tr.length; i++) {\n      td = tr[i].getElementsByTagName(\"td\")[0];\n\n      if (td) {\n        if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\n          tr[i].style.display = \"\";\n        } else {\n          tr[i].style.display = \"none\";\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AllSongsTable, {\n        songList: this.state.songs,\n        deleteSong: this.deleteSong,\n        filterList: this.filterList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateNewSongForm, {\n        createNewSong: this.createSong\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alextucker/Desktop/Music-Library-React/src/App.js"],"names":["axios","React","Component","AllSongsTable","CreateNewSongForm","App","constructor","props","getAllSongs","response","get","setState","songs","data","createSong","newSong","console","log","post","tempSong","state","push","ex","deleteSong","id","delete","splice","componentDidMount","filterList","input","filter","table","tr","td","i","document","getElementById","value","toUpperCase","getElementsByTagName","length","innerHTML","indexOf","style","display","render"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {Component} from 'react';\nimport AllSongsTable from './components/AllSongsTable/AllSongsTable';\nimport CreateNewSongForm from './components/CreatNewSongForm/CreateNewSongForm';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            songs: []\n         }\n    }\n\n    componentDidMount(){\n        this.getAllSongs()\n    }\n\n    getAllSongs = async () => {\n        let response = await axios.get('http://127.0.0.1:8000/music/');\n        this.setState({\n            songs: response.data\n        });\n    }\n\n    createSong = async (newSong) => {\n        try{\n            console.log('Succes create in API call')\n            let response = await axios.post('http://127.0.0.1:8000/music/', newSong);\n            let tempSong = this.state.songs;\n            tempSong.push(response.data);\n            this.setState({\n                songs: tempSong\n            })\n            console.log(this.state.songs)\n            this.getAllSongs()\n        }\n        catch (ex) {\n            console.log('Error in API call', ex)\n        }\n    }\n\n    deleteSong = async (id) => {\n        try{\n            console.log('Succes in delete API call')\n            let response = await axios.delete(`http://127.0.0.1:8000/music/${id}/`);\n            let tempSong = this.state.songs;\n            console.log(response.data)\n            tempSong.splice(id, 1);\n            this.setState({\n                songs: tempSong\n            })\n            this.getAllSongs()\n        }\n        catch (ex) {\n            console.log('Error in delete API call', ex)\n        }\n    }\n\n    filterList (){\n        let input, filter, table, tr, td, i;\n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"myTable\");\n        tr = table.getElementsByTagName(\"tr\");\n        for (i = 0; i < tr.length; i++) {\n            td = tr[i].getElementsByTagName(\"td\")[0];\n            if (td) {\n            if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {\n                tr[i].style.display = \"\";\n            } else {\n                tr[i].style.display = \"none\";\n            }\n            }       \n        }\n    }\n\n    render() { \n        return ( \n            <div>\n                <h1>Hello</h1>\n                <AllSongsTable songList={this.state.songs} deleteSong={this.deleteSong} filterList={this.filterList} />\n                <CreateNewSongForm createNewSong={this.createSong}/>\n            </div>\n         );\n    }\n}\n \nexport default App;"]},"metadata":{},"sourceType":"module"}